'.source.cpp':
	'all':
		'prefix': 'all'
		'body': 'begin($1), end($1)'

	'basic_string':
		'prefix': 'basic_string'
		'body': 'basic_string'

	'push_back':
		'prefix': 'push_back'
		'body': 'push_back'

	'emplace_back':
		'prefix': 'emplace_back'
		'body': 'emplace_back'

	'lower_bound':
		'prefix': 'lower_bound'
		'body': 'lower_bound'

	'upper_bound':
		'prefix': 'upper_bound'
		'body': 'upper_bound'

	'break':
		'prefix': 'break'
		'body': 'break'

	'continue':
		'prefix': 'continue'
		'body': 'continue'

	'return':
		'prefix': 'return'
		'body': 'return'

	'operator':
		'prefix': 'operator'
		'body': """
			template<class T>
			auto operator$1 (const T& b) const {
				$2
			}
		"""

	'struct':
		'prefix': 'struct'
		'body': """
			struct $1 {
				$2
			};
		"""

	'unique':
		'prefix': 'unique'
		'body': """
			sort(begin($1), end($1));
			$1.erase(unique(begin($1), end($1)), end($1));
			$2
		"""

	'debugging':
		'prefix': 'dbg'
		'body': """
			#ifdef LOCAL
				#define dbg(x) (cerr << "ln " << __LINE__ << ": " << #x << " = " << (x) << '\\\\n')
			#else
				#define dbg(x)
			#endif
		"""

	'Try to optimize compiler for speed':
		'prefix': 'optimize'
		'body': """
			#pragma GCC optimize("Ofast")
			#pragma GCC optimize("unroll-loops")
			#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
		"""

	'Ordered set':
		'prefix': 'orderedset'
		'body': """
			#include <ext/pb_ds/assoc_container.hpp>
			#include <ext/pb_ds/tree_policy.hpp>
			using namespace __gnu_pbds;
			typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
				ordered_set;
			// find_by_order(size_t) -> iterator, order_of_key(val) -> size_t
		"""

	'Testcases':
		'prefix': 'testcases'
		'body': """
			int t;
			cin >> t;
			while (t--) {
				$1
			}
		"""
